➜  ims git:(master) ✗ cd ..
➜  views git:(master) ✗ cd ..
➜  application git:(master) ✗ cd ..
➜  ims git:(master) ✗ git add -A
➜  ims git:(master) ✗ git commit -m "repair dropdown bug"
[master 1383449] repair dropdown bug
 6 files changed, 9 insertions(+), 6 deletions(-)
 create mode 100644 application/.DS_Store
 create mode 100644 application/views/.DS_Store
➜  ims git:(master) git push origin master
Counting objects: 28, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (12/12), done.
Writing objects: 100% (12/12), 2.30 KiB | 0 bytes/s, done.
Total 12 (delta 10), reused 0 (delta 0)
To https://github.com/LL-SE-RED-1/ims.git
   0686837..1383449  master -> master
➜  ims git:(master) git add -A
➜  ims git:(master) ✗ git commit -m "Umm"
[master 08b1228] Umm
 3 files changed, 20 insertions(+), 7 deletions(-)
➜  ims git:(master) git push origin master
Counting objects: 22, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (8/8), done.
Writing objects: 100% (8/8), 820 bytes | 0 bytes/s, done.
Total 8 (delta 7), reused 0 (delta 0)
To https://github.com/LL-SE-RED-1/ims.git
   1383449..08b1228  master -> master
➜  ims git:(master) ls
#.DS_Store#	assets		dist		license.txt	uploads
1.out		batch.py	images		metadata
1.py		cd		index.php	python
application	css		js		system
➜  ims git:(master) Emacs .gitignore
emacs: Terminal type "dumb" is not powerful enough to run Emacs.
It lacks the ability to position the cursor.
If that is not the actual type of terminal you have,
use the Bourne shell command `TERM=... export TERM' (C-shell:
`setenv TERM ...') to specify the correct type.  It may be necessary
to do `unset TERMINFO' (C-shell: `unsetenv TERMINFO') as well.
➜  ims git:(master) ls
#.DS_Store#	assets		dist		license.txt	uploads
1.out		batch.py	images		metadata
1.py		cd		index.php	python
application	css		js		system
➜  ims git:(master) ✗ git rm #.DS_Store\# 
usage: git rm [options] [--] <file>...

    -n, --dry-run         dry run
    -q, --quiet           do not list removed files
    --cached              only remove from the index
    -f, --force           override the up-to-date check
    -r                    allow recursive removal
    --ignore-unmatch      exit with a zero status even if nothing matched

➜  ims git:(master) ✗ ls
#.DS_Store#	assets		dist		license.txt	uploads
1.out		batch.py	images		metadata
1.py		cd		index.php	python
application	css		js		system
➜  ims git:(master) ✗ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   .gitignore

no changes added to commit (use "git add" and/or "git commit -a")
➜  ims git:(master) ✗ git rm \#.DS_Store\# 
rm '#.DS_Store#'
➜  ims git:(master) ✗ ls
1.out		batch.py	images		metadata
1.py		cd		index.php	python
application	css		js		system
assets		dist		license.txt	uploads
➜  ims git:(master) ✗ git rm *.py
rm '1.py'
rm 'batch.py'
➜  ims git:(master) ✗ git rm 1.out 
rm '1.out'
➜  ims git:(master) ✗ git rm python 
rm 'python'
➜  ims git:(master) ✗ git rm cd
rm 'cd'
➜  ims git:(master) ✗ ls
application	dist		js		system
assets		images		license.txt	uploads
css		index.php	metadata
➜  ims git:(master) ✗ git commit -m "delete something"
[master ee9cab9] delete something
 6 files changed, 170 deletions(-)
 delete mode 100755 #.DS_Store#
 delete mode 100644 1.out
 delete mode 100644 1.py
 delete mode 100644 batch.py
 delete mode 100644 cd
 delete mode 100644 python
➜  ims git:(master) ✗ git add .gitignore
➜  ims git:(master) ✗ git commit -m "modify gitignore"
[master 5e313d8] modify gitignore
 1 file changed, 10 insertions(+)
➜  ims git:(master) ✗ git push origin master
Counting objects: 8, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 591 bytes | 0 bytes/s, done.
Total 5 (delta 2), reused 0 (delta 0)
To https://github.com/LL-SE-RED-1/ims.git
   08b1228..5e313d8  master -> master
➜  ims git:(master) ✗ 